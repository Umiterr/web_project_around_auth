{"ast":null,"code":"var _jsxFileName = \"/Users/umiter/Desktop/TripleTen/Sprint 15/web_project_around_auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Routes, BrowserRouter as Router, Navigate, useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/api\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport * as auth from \"../utils/auth\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [user, setUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isPopupConfirmOpen, setIsPopupConfirmOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const navigate = useNavigate(); // Move it here\n\n  const fetchUserData = async () => {\n    try {\n      const userInfo = await api.getUserInfo();\n      setCurrentUser(userInfo);\n      setLoggedIn(true);\n    } catch (error) {\n      console.error(\"Error fetching current user data:\", error);\n      setLoggedIn(false);\n    }\n  };\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        if (res) {\n          console.log(res);\n          setLoggedIn(true);\n          navigate(\"/profile\");\n        }\n      });\n    }\n  };\n  useEffect(() => {\n    tokenCheck();\n    try {\n      api.getUserInfo().then(userInfo => {\n        setCurrentUser(userInfo);\n      });\n      api.getInitialCards().then(cards => {\n        setCards(cards);\n      });\n    } catch (error) {\n      console.error(\"Error fetching current user data:\", error);\n    }\n  }, []);\n  const closeImagePopup = () => {\n    setIsImagePopupOpen(false);\n  };\n  const closePopupConfirm = () => {\n    setIsPopupConfirmOpen(false);\n  };\n  const onAddCard = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const onEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const onEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const deleteSelectedCard = async () => {\n    const cardId = selectedCard._id;\n    setCards(cards.filter(card => card._id !== cardId));\n    await api.deleteCard(cardId);\n  };\n  const handleUpdateUser = async (name, about) => {\n    const newUser = await api.setUserInfo({\n      name,\n      about\n    });\n    setUser(newUser);\n    setCurrentUser(newUser);\n    setIsEditProfilePopupOpen(false);\n  };\n  const handleUpdateAvatar = async e => {\n    const profileImageUrl = e;\n    const newUser = await api.setUserImage(profileImageUrl);\n    setUser(newUser);\n    setCurrentUser(newUser);\n    setIsEditAvatarPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n            value: currentUser,\n            children: [loggedIn && /*#__PURE__*/_jsxDEV(Main, {\n              user: user,\n              cards: cards,\n              isImagePopupOpen: isImagePopupOpen,\n              isPopupConfirmOpen: isPopupConfirmOpen,\n              selectedCard: selectedCard,\n              isAddPlacePopupOpen: isAddPlacePopupOpen,\n              isEditProfilePopupOpen: isEditProfilePopupOpen,\n              isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n              closeImagePopup: closeImagePopup,\n              closePopupConfirm: closePopupConfirm,\n              onAddCard: onAddCard,\n              onEditAvatarClick: onEditAvatarClick,\n              onEditProfileClick: onEditProfileClick,\n              deleteSelectedCard: deleteSelectedCard,\n              handleUpdateUser: handleUpdateUser,\n              handleUpdateAvatar: handleUpdateAvatar,\n              setUser: setUser,\n              setCards: setCards,\n              setSelectedCard: setSelectedCard,\n              setIsImagePopupOpen: setIsImagePopupOpen,\n              setIsPopupConfirmOpen: setIsPopupConfirmOpen,\n              setIsAddPlacePopupOpen: setIsAddPlacePopupOpen,\n              setIsEditProfilePopupOpen: setIsEditProfilePopupOpen,\n              setIsEditAvatarPopupOpen: setIsEditAvatarPopupOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), console.log(loggedIn)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: fetchUserData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LsDeq9s+W+3Y+6pOC+LV6gv3mQA=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Routes","BrowserRouter","Router","Navigate","useNavigate","CurrentUserContext","api","Footer","Header","Main","Login","Register","auth","ProtectedRoute","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","currentUser","setCurrentUser","user","setUser","cards","setCards","isImagePopupOpen","setIsImagePopupOpen","isPopupConfirmOpen","setIsPopupConfirmOpen","selectedCard","setSelectedCard","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","navigate","fetchUserData","userInfo","getUserInfo","error","console","tokenCheck","jwt","localStorage","getItem","getContent","then","res","log","getInitialCards","closeImagePopup","closePopupConfirm","onAddCard","onEditAvatarClick","onEditProfileClick","deleteSelectedCard","cardId","_id","filter","card","deleteCard","handleUpdateUser","name","about","newUser","setUserInfo","handleUpdateAvatar","e","profileImageUrl","setUserImage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","index","element","Provider","value","onLogin","to","_c","$RefreshReg$"],"sources":["/Users/umiter/Desktop/TripleTen/Sprint 15/web_project_around_auth/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Route,\n  Routes,\n  BrowserRouter as Router,\n  Navigate,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport \"../App.css\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/api\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport * as auth from \"../utils/auth\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nexport function App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [user, setUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isPopupConfirmOpen, setIsPopupConfirmOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n\n  const navigate = useNavigate(); // Move it here\n\n  const fetchUserData = async () => {\n    try {\n      const userInfo = await api.getUserInfo();\n      setCurrentUser(userInfo);\n      setLoggedIn(true);\n    } catch (error) {\n      console.error(\"Error fetching current user data:\", error);\n      setLoggedIn(false);\n    }\n  };\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem(\"jwt\");\n\n    if (jwt) {\n      auth.getContent(jwt).then((res) => {\n        if (res) {\n          console.log(res);\n          setLoggedIn(true);\n          navigate(\"/profile\");\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    tokenCheck();\n    try {\n      api.getUserInfo().then((userInfo) => {\n        setCurrentUser(userInfo);\n      });\n\n      api.getInitialCards().then((cards) => {\n        setCards(cards);\n      });\n    } catch (error) {\n      console.error(\"Error fetching current user data:\", error);\n    }\n  }, []);\n\n  const closeImagePopup = () => {\n    setIsImagePopupOpen(false);\n  };\n\n  const closePopupConfirm = () => {\n    setIsPopupConfirmOpen(false);\n  };\n\n  const onAddCard = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const onEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const onEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const deleteSelectedCard = async () => {\n    const cardId = selectedCard._id;\n    setCards(cards.filter((card) => card._id !== cardId));\n    await api.deleteCard(cardId);\n  };\n\n  const handleUpdateUser = async (name, about) => {\n    const newUser = await api.setUserInfo({ name, about });\n    setUser(newUser);\n    setCurrentUser(newUser);\n    setIsEditProfilePopupOpen(false);\n  };\n\n  const handleUpdateAvatar = async (e) => {\n    const profileImageUrl = e;\n    const newUser = await api.setUserImage(profileImageUrl);\n    setUser(newUser);\n    setCurrentUser(newUser);\n    setIsEditAvatarPopupOpen(false);\n  };\n\n  return (\n    <Router>\n      <div className=\"page__content\">\n        <Header />\n\n        <Routes>\n          <Route\n            path=\"/profile\"\n            index\n            element={\n              <CurrentUserContext.Provider value={currentUser}>\n                {loggedIn && (\n                  <Main\n                    user={user}\n                    cards={cards}\n                    isImagePopupOpen={isImagePopupOpen}\n                    isPopupConfirmOpen={isPopupConfirmOpen}\n                    selectedCard={selectedCard}\n                    isAddPlacePopupOpen={isAddPlacePopupOpen}\n                    isEditProfilePopupOpen={isEditProfilePopupOpen}\n                    isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n                    closeImagePopup={closeImagePopup}\n                    closePopupConfirm={closePopupConfirm}\n                    onAddCard={onAddCard}\n                    onEditAvatarClick={onEditAvatarClick}\n                    onEditProfileClick={onEditProfileClick}\n                    deleteSelectedCard={deleteSelectedCard}\n                    handleUpdateUser={handleUpdateUser}\n                    handleUpdateAvatar={handleUpdateAvatar}\n                    setUser={setUser}\n                    setCards={setCards}\n                    setSelectedCard={setSelectedCard}\n                    setIsImagePopupOpen={setIsImagePopupOpen}\n                    setIsPopupConfirmOpen={setIsPopupConfirmOpen}\n                    setIsAddPlacePopupOpen={setIsAddPlacePopupOpen}\n                    setIsEditProfilePopupOpen={setIsEditProfilePopupOpen}\n                    setIsEditAvatarPopupOpen={setIsEditAvatarPopupOpen}\n                  />\n                )}\n                {console.log(loggedIn)}\n              </CurrentUserContext.Provider>\n            }\n          />\n\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/login\" element={<Login onLogin={fetchUserData} />} />\n\n          <Route\n            path=\"/\"\n            element={\n              loggedIn ? <Navigate to=\"/profile\" /> : <Navigate to=\"/login\" />\n            }\n          />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}