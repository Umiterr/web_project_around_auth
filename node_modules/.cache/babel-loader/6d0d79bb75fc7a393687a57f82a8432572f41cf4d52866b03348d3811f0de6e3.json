{"ast":null,"code":"var _jsxFileName = \"/Users/umiter/Desktop/TripleTen/Sprint 15/web_project_around_auth/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport addIcon from \"../images/UI/Add-Button.svg\";\nimport { useContext } from \"react\";\nimport { Card } from \"./Card\";\nimport api from \"../utils/api\";\nimport { Profile } from \"./Profile/Profile\";\nimport { ImagePopup } from \"./ImagePopup\";\nimport { PopupConfirm } from \"./PopupConfirm\";\nimport { AddPlacePopup } from \"./AddPlacePopup\";\nimport { EditAvatarPopup } from \"./EditAvatarPopup\";\nimport { EditProfilePopup } from \"./EditProfilePopup\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { FormValidator } from \"../utils/FormValidator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Main(props) {\n  _s();\n  const {\n    user,\n    cards,\n    isImagePopupOpen,\n    isPopupConfirmOpen,\n    selectedCard,\n    isAddPlacePopupOpen,\n    isEditProfilePopupOpen,\n    isEditAvatarPopupOpen,\n    closeImagePopup,\n    closePopupConfirm,\n    onAddCard,\n    onEditAvatarClick,\n    onEditProfileClick,\n    deleteSelectedCard,\n    handleUpdateUser,\n    handleUpdateAvatar,\n    setCards,\n    setSelectedCard,\n    setIsImagePopupOpen,\n    setIsPopupConfirmOpen,\n    setIsAddPlacePopupOpen,\n    setIsEditProfilePopupOpen,\n    setIsEditAvatarPopupOpen\n  } = props;\n  const currentUser = useContext(CurrentUserContext);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(Profile, {\n        onEditAvatar: onEditAvatarClick,\n        onEditProfile: onEditProfileClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"card__add-button\",\n        onClick: onAddCard,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"card__add-button\",\n          alt: \"Boton de a\\xF1adir tarjeta\",\n          src: addIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"feed\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onCardClicked: () => {\n          setSelectedCard(card);\n          setIsImagePopupOpen(true);\n        },\n        openPopupConfirm: cardId => {\n          setSelectedCard(cards.find(card => card._id === cardId));\n          setIsPopupConfirmOpen(true);\n        }\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      onUpdateUser: handleUpdateUser,\n      isOpen: isEditProfilePopupOpen,\n      closePopup: () => {\n        setIsEditProfilePopupOpen(false);\n      },\n      name: user ? user.name : \"\",\n      about: user ? user.about : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      onSubmit: handleUpdateAvatar,\n      isOpen: isEditAvatarPopupOpen,\n      closePopup: () => {\n        setIsEditAvatarPopupOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      onSubmit: async e => {\n        e.preventDefault();\n        const title = e.target[0].value;\n        const imageURL = e.target[1].value;\n        const newCard = await api.setNewCard({\n          title,\n          imageURL\n        });\n        setCards([newCard, ...cards]);\n        setIsAddPlacePopupOpen(false);\n      },\n      isOpen: isAddPlacePopupOpen,\n      closePopup: () => {\n        setIsAddPlacePopupOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupConfirm, {\n      deleteSelectedCard: deleteSelectedCard,\n      isOpen: isPopupConfirmOpen,\n      closePopup: closePopupConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      title: selectedCard ? selectedCard.name : \"\",\n      imageUrl: selectedCard ? selectedCard.link : \"\",\n      isOpen: isImagePopupOpen,\n      closePopup: closeImagePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["addIcon","useContext","Card","api","Profile","ImagePopup","PopupConfirm","AddPlacePopup","EditAvatarPopup","EditProfilePopup","CurrentUserContext","FormValidator","jsxDEV","_jsxDEV","Main","props","_s","user","cards","isImagePopupOpen","isPopupConfirmOpen","selectedCard","isAddPlacePopupOpen","isEditProfilePopupOpen","isEditAvatarPopupOpen","closeImagePopup","closePopupConfirm","onAddCard","onEditAvatarClick","onEditProfileClick","deleteSelectedCard","handleUpdateUser","handleUpdateAvatar","setCards","setSelectedCard","setIsImagePopupOpen","setIsPopupConfirmOpen","setIsAddPlacePopupOpen","setIsEditProfilePopupOpen","setIsEditAvatarPopupOpen","currentUser","className","children","onEditAvatar","onEditProfile","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","alt","src","map","card","onCardClicked","openPopupConfirm","cardId","find","_id","onUpdateUser","isOpen","closePopup","name","about","onSubmit","e","preventDefault","title","target","value","imageURL","newCard","setNewCard","imageUrl","link","_c","$RefreshReg$"],"sources":["/Users/umiter/Desktop/TripleTen/Sprint 15/web_project_around_auth/src/components/Main.js"],"sourcesContent":["import addIcon from \"../images/UI/Add-Button.svg\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"./Card\";\r\nimport api from \"../utils/api\";\r\nimport { Profile } from \"./Profile/Profile\";\r\nimport { ImagePopup } from \"./ImagePopup\";\r\nimport { PopupConfirm } from \"./PopupConfirm\";\r\nimport { AddPlacePopup } from \"./AddPlacePopup\";\r\nimport { EditAvatarPopup } from \"./EditAvatarPopup\";\r\nimport { EditProfilePopup } from \"./EditProfilePopup\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\r\nimport { FormValidator } from \"../utils/FormValidator\";\r\n\r\nexport function Main(props) {\r\n  const {\r\n    user,\r\n    cards,\r\n    isImagePopupOpen,\r\n    isPopupConfirmOpen,\r\n    selectedCard,\r\n    isAddPlacePopupOpen,\r\n    isEditProfilePopupOpen,\r\n    isEditAvatarPopupOpen,\r\n    closeImagePopup,\r\n    closePopupConfirm,\r\n    onAddCard,\r\n    onEditAvatarClick,\r\n    onEditProfileClick,\r\n    deleteSelectedCard,\r\n    handleUpdateUser,\r\n    handleUpdateAvatar,\r\n    setCards,\r\n    setSelectedCard,\r\n    setIsImagePopupOpen,\r\n    setIsPopupConfirmOpen,\r\n    setIsAddPlacePopupOpen,\r\n    setIsEditProfilePopupOpen,\r\n    setIsEditAvatarPopupOpen,\r\n  } = props;\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"dashboard\">\r\n        <Profile\r\n          onEditAvatar={onEditAvatarClick}\r\n          onEditProfile={onEditProfileClick}\r\n        />\r\n\r\n        <button className=\"card__add-button\" onClick={onAddCard}>\r\n          <img\r\n            id=\"card__add-button\"\r\n            alt=\"Boton de aÃ±adir tarjeta\"\r\n            src={addIcon}\r\n          />\r\n        </button>\r\n      </section>\r\n\r\n      <section className=\"feed\">\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card._id}\r\n            card={card}\r\n            onCardClicked={() => {\r\n              setSelectedCard(card);\r\n              setIsImagePopupOpen(true);\r\n            }}\r\n            openPopupConfirm={(cardId) => {\r\n              setSelectedCard(cards.find((card) => card._id === cardId));\r\n              setIsPopupConfirmOpen(true);\r\n            }}\r\n          />\r\n        ))}\r\n      </section>\r\n      <EditProfilePopup\r\n        onUpdateUser={handleUpdateUser}\r\n        isOpen={isEditProfilePopupOpen}\r\n        closePopup={() => {\r\n          setIsEditProfilePopupOpen(false);\r\n        }}\r\n        name={user ? user.name : \"\"}\r\n        about={user ? user.about : \"\"}\r\n      />\r\n\r\n      <EditAvatarPopup\r\n        onSubmit={handleUpdateAvatar}\r\n        isOpen={isEditAvatarPopupOpen}\r\n        closePopup={() => {\r\n          setIsEditAvatarPopupOpen(false);\r\n        }}\r\n      />\r\n\r\n      <AddPlacePopup\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n          const title = e.target[0].value;\r\n          const imageURL = e.target[1].value;\r\n\r\n          const newCard = await api.setNewCard({\r\n            title,\r\n            imageURL,\r\n          });\r\n          setCards([newCard, ...cards]);\r\n          setIsAddPlacePopupOpen(false);\r\n        }}\r\n        isOpen={isAddPlacePopupOpen}\r\n        closePopup={() => {\r\n          setIsAddPlacePopupOpen(false);\r\n        }}\r\n      />\r\n\r\n      <PopupConfirm\r\n        deleteSelectedCard={deleteSelectedCard}\r\n        isOpen={isPopupConfirmOpen}\r\n        closePopup={closePopupConfirm}\r\n      />\r\n      <ImagePopup\r\n        title={selectedCard ? selectedCard.name : \"\"}\r\n        imageUrl={selectedCard ? selectedCard.link : \"\"}\r\n        isOpen={isImagePopupOpen}\r\n        closePopup={closeImagePopup}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}