{"ast":null,"code":"export const BASE_URL = \"https://register.nomoreparties.co\";\nexport const register = async ({\n  contraseña,\n  email\n}) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        contraseña: contraseña,\n        email: email\n      })\n    });\n    if (!response.ok) {\n      if (response.status === 400) {\n        throw new Error(\"Error: Uno de los campos se rellenó de forma incorrecta\");\n      } else {\n        throw new Error(`Error: ${response.status} - ${response.statusText}`);\n      }\n    }\n    const responseBody = await response.json();\n    console.log(responseBody);\n    return responseBody.data;\n  } catch (error) {\n    console.error(\"Error:\", error.message);\n    return {\n      error: true,\n      message: error.message\n    };\n  }\n};","map":{"version":3,"names":["BASE_URL","register","contraseña","email","response","fetch","method","headers","body","JSON","stringify","ok","status","Error","statusText","responseBody","json","console","log","data","error","message"],"sources":["/Users/umiter/Desktop/TripleTen/Sprint 15/web_project_around_auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://register.nomoreparties.co\";\n\nexport const register = async ({ contraseña, email }) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        contraseña: contraseña,\n        email: email,\n      }),\n    });\n\n    if (!response.ok) {\n      if (response.status === 400) {\n        throw new Error(\n          \"Error: Uno de los campos se rellenó de forma incorrecta\"\n        );\n      } else {\n        throw new Error(`Error: ${response.status} - ${response.statusText}`);\n      }\n    }\n\n    const responseBody = await response.json();\n    console.log(responseBody);\n\n    return responseBody.data;\n  } catch (error) {\n    console.error(\"Error:\", error.message);\n    return { error: true, message: error.message };\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,mCAAmC;AAE3D,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAO;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,SAAQ,EAAE;MACjDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBR,UAAU,EAAEA,UAAU;QACtBC,KAAK,EAAEA;MACT,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CACb,yDACF,CAAC;MACH,CAAC,MAAM;QACL,MAAM,IAAIA,KAAK,CAAE,UAAST,QAAQ,CAACQ,MAAO,MAAKR,QAAQ,CAACU,UAAW,EAAC,CAAC;MACvE;IACF;IAEA,MAAMC,YAAY,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;IAEzB,OAAOA,YAAY,CAACI,IAAI;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;IACtC,OAAO;MAAED,KAAK,EAAE,IAAI;MAAEC,OAAO,EAAED,KAAK,CAACC;IAAQ,CAAC;EAChD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}