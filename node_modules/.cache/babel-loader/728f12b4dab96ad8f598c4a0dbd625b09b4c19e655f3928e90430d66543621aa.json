{"ast":null,"code":"var _jsxFileName = \"/Users/umiter/Desktop/TripleTen/Sprint 15/web_project_around_auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport \"../App.css\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/api\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main\";\n/* import { ProtectedRoute } from \"./ProtectedRoute\"; */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    try {\n      api.getUserInfo().then(userInfo => {\n        setCurrentUser(userInfo);\n        setLoggedIn(true);\n      });\n      api.getInitialCards().then(cards => {\n        setCards(cards);\n      });\n    } catch (error) {\n      console.error(\"Error fetching current user data:\", error);\n    }\n  }, []);\n  const [user, setUser] = useState(null); // name, about, avatar\n  const [cards, setCards] = useState([]);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isPopupConfirmOpen, setIsPopupConfirmOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const closeImagePopup = () => {\n    setIsImagePopupOpen(false);\n  };\n  const closePopupConfirm = () => {\n    setIsPopupConfirmOpen(false);\n  };\n  const onAddCard = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const onEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const onEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const deleteSelectedCard = async () => {\n    const cardId = selectedCard._id;\n    setCards(cards.filter(card => card._id !== cardId));\n    await api.deleteCard(cardId);\n  };\n  const handleUpdateUser = async (name, about) => {\n    const newUser = await api.setUserInfo({\n      name,\n      about\n    });\n    setUser(newUser);\n    setCurrentUser(newUser);\n    setIsEditProfilePopupOpen(false);\n  };\n  const handleUpdateAvatar = async e => {\n    const profileImageUrl = e;\n    const newUser = await api.setUserImage(profileImageUrl);\n    setUser(newUser);\n    setCurrentUser(newUser);\n    setIsEditAvatarPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__content\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: loggedIn && /*#__PURE__*/_jsxDEV(Main, {\n        user: user,\n        cards: cards,\n        isImagePopupOpen: isImagePopupOpen,\n        isPopupConfirmOpen: isPopupConfirmOpen,\n        selectedCard: selectedCard,\n        isAddPlacePopupOpen: isAddPlacePopupOpen,\n        isEditProfilePopupOpen: isEditProfilePopupOpen,\n        isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n        closeImagePopup: closeImagePopup,\n        closePopupConfirm: closePopupConfirm,\n        onAddCard: onAddCard,\n        onEditAvatarClick: onEditAvatarClick,\n        onEditProfileClick: onEditProfileClick,\n        deleteSelectedCard: deleteSelectedCard,\n        handleUpdateUser: handleUpdateUser,\n        handleUpdateAvatar: handleUpdateAvatar,\n        setUser: setUser,\n        setCards: setCards,\n        setSelectedCard: setSelectedCard,\n        setIsImagePopupOpen: setIsImagePopupOpen,\n        setIsPopupConfirmOpen: setIsPopupConfirmOpen,\n        setIsAddPlacePopupOpen: setIsAddPlacePopupOpen,\n        setIsEditProfilePopupOpen: setIsEditProfilePopupOpen,\n        setIsEditAvatarPopupOpen: setIsEditAvatarPopupOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RritU4uyQiLvXgT0AGucp6XQCXo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Navigate","CurrentUserContext","api","Footer","Header","Main","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","currentUser","setCurrentUser","getUserInfo","then","userInfo","getInitialCards","cards","setCards","error","console","user","setUser","isImagePopupOpen","setIsImagePopupOpen","isPopupConfirmOpen","setIsPopupConfirmOpen","selectedCard","setSelectedCard","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","closeImagePopup","closePopupConfirm","onAddCard","onEditAvatarClick","onEditProfileClick","deleteSelectedCard","cardId","_id","filter","card","deleteCard","handleUpdateUser","name","about","newUser","setUserInfo","handleUpdateAvatar","e","profileImageUrl","setUserImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","path","to","_c","$RefreshReg$"],"sources":["/Users/umiter/Desktop/TripleTen/Sprint 15/web_project_around_auth/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport \"../App.css\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/api\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main\";\n/* import { ProtectedRoute } from \"./ProtectedRoute\"; */\n\nexport function App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    try {\n      api.getUserInfo().then((userInfo) => {\n        setCurrentUser(userInfo);\n        setLoggedIn(true);\n      });\n\n      api.getInitialCards().then((cards) => {\n        setCards(cards);\n      });\n    } catch (error) {\n      console.error(\"Error fetching current user data:\", error);\n    }\n  }, []);\n\n  const [user, setUser] = useState(null); // name, about, avatar\n  const [cards, setCards] = useState([]);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isPopupConfirmOpen, setIsPopupConfirmOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n\n  const closeImagePopup = () => {\n    setIsImagePopupOpen(false);\n  };\n\n  const closePopupConfirm = () => {\n    setIsPopupConfirmOpen(false);\n  };\n\n  const onAddCard = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const onEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const onEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const deleteSelectedCard = async () => {\n    const cardId = selectedCard._id;\n    setCards(cards.filter((card) => card._id !== cardId));\n    await api.deleteCard(cardId);\n  };\n\n  const handleUpdateUser = async (name, about) => {\n    const newUser = await api.setUserInfo({ name, about });\n    setUser(newUser);\n    setCurrentUser(newUser);\n    setIsEditProfilePopupOpen(false);\n  };\n\n  const handleUpdateAvatar = async (e) => {\n    const profileImageUrl = e;\n    const newUser = await api.setUserImage(profileImageUrl);\n    setUser(newUser);\n    setCurrentUser(newUser);\n    setIsEditAvatarPopupOpen(false);\n  };\n\n  return (\n    <div className=\"page__content\">\n      <Header />\n      <CurrentUserContext.Provider value={currentUser}>\n        {loggedIn && (\n          <Main\n            user={user}\n            cards={cards}\n            isImagePopupOpen={isImagePopupOpen}\n            isPopupConfirmOpen={isPopupConfirmOpen}\n            selectedCard={selectedCard}\n            isAddPlacePopupOpen={isAddPlacePopupOpen}\n            isEditProfilePopupOpen={isEditProfilePopupOpen}\n            isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n            closeImagePopup={closeImagePopup}\n            closePopupConfirm={closePopupConfirm}\n            onAddCard={onAddCard}\n            onEditAvatarClick={onEditAvatarClick}\n            onEditProfileClick={onEditProfileClick}\n            deleteSelectedCard={deleteSelectedCard}\n            handleUpdateUser={handleUpdateUser}\n            handleUpdateAvatar={handleUpdateAvatar}\n            setUser={setUser}\n            setCards={setCards}\n            setSelectedCard={setSelectedCard}\n            setIsImagePopupOpen={setIsImagePopupOpen}\n            setIsPopupConfirmOpen={setIsPopupConfirmOpen}\n            setIsAddPlacePopupOpen={setIsAddPlacePopupOpen}\n            setIsEditProfilePopupOpen={setIsEditProfilePopupOpen}\n            setIsEditAvatarPopupOpen={setIsEditAvatarPopupOpen}\n          />\n        )}\n      </CurrentUserContext.Provider>\n\n      <Route path=\"/signup\">{/* <Register /> */}</Route>\n      <Route path=\"/signin\">{/* <Login /> */}</Route>\n      <Route path=\"/\">\n        {loggedIn ? <Navigate to=\"/profile\" /> : <Navigate to=\"/signin\" />}\n      </Route>\n\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}